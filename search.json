[{"path":"https://thomuk.github.io/robson10classifier/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 robson10classifier authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thomuk.github.io/robson10classifier/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Smith. Author, maintainer.","code":""},{"path":"https://thomuk.github.io/robson10classifier/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith T (2023). robson10classifier: Helpers Analysing Childbirth According Robson 10 Group Classification System (TGCS). R package version 0.2.0, https://thomuk.github.io/robson10classifier/.","code":"@Manual{,   title = {robson10classifier: Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)},   author = {Tom Smith},   year = {2023},   note = {R package version 0.2.0},   url = {https://thomuk.github.io/robson10classifier/}, }"},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"robson10classifier","dir":"","previous_headings":"","what":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"goal {robson10classifier} package provide suite functions simplyfying classification analysis childbirth data according Robson 10 Group Classification System, adopted World Health Organisation 2015.","code":""},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"overview-of-the-robson-10-group-classification-system","dir":"","previous_headings":"","what":"Overview of the Robson 10 Group Classification System","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"image summary TGCS, taken World Health Organisation’s TGCS Implementation Manual, available page.","code":""},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"can install github using {remotes} package:","code":"# install.packages(\"remotes\") remotes::install_github(\"https://github.com/ThomUK/robson10classifier\")"},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"package’s main tgcs_classify(). takes data frame containing minimum 6 columns, one obstetric variables used classify Robson Groups. row data frame represents birth. function returns data frame, additional column Robson_Classification. can number 1 10, case data required classification missing, “Unclassifiable”.","code":"library(robson10classifier)  # prepare the data (ID, plus 6 columns of obstetric variables) data <- data.frame(   ID = c(1:5),   Parity = c(\"Nullipara\", \"Multipara\", \"Nullipara\", \"Multipara\", NA),   Previous_CS = c(\"None\", \"One or more\", \"None\", \"One or more\", NA),   Onset_Of_Labour = c(\"Spontaneous\", \"Pre-labour CS\", \"Induced\", \"Spontaneous\", NA),   Number_Of_Fetuses = c(\"Multiple\", \"Single\", \"Single\", \"Single\", \"Multiple\"),   Gestational_Age = c(\"Term\", \"Preterm\", \"Term\", \"Term\", NA),   Fetal_Lie_And_Presentation = c(\"Cephalic\", \"Breech\", \"Cephalic\", NA, NA) )  # use the package to make the classifications classification <- tgcs_classify(data)  # visualise the resulting classifications in a table kableExtra::kbl(classification)"},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"package-planning","dir":"","previous_headings":"","what":"Package Planning","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"package early stages development. section summarises functionality implemented, functionality planned future.","code":""},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"id_1-implemented-or-partially-implemented-functions","dir":"","previous_headings":"Package Planning","what":"1. Implemented (or partially implemented) functions:","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"also return details element unclassifiable. support sub-grouping certain Robson Groups (eg. 2a, 2b, 4a, 4b, 5.1, 5.2). argument implemented control probability values variable occur. way possible tune output line facility’s numbers (eg. missing data). Arguments implemented add simulated birth dates, normally-distributed number births date. possible tune result setting mean standard deviations typical number births per day facility.","code":""},{"path":"https://thomuk.github.io/robson10classifier/index.html","id":"id_2-planned-for-future-implementation","dir":"","previous_headings":"Package Planning","what":"2. Planned for future implementation:","title":"Helpers For Analysing Childbirth According To The Robson 10 Group Classification System (TGCS)","text":"tgcs_report_unclassifiable() take population birth records obstetric variables, summarise reasons unclassifiable records, according obstetric variables missing. tgcs_report_time_series() take population birth records dates (eg. births given healthcare facility region), create RMarkdown report time-series trends Robson group, unclassifiable records. tgcs_report_table() take population birth records dates, create Robson Classification Report Table standard table 5 World Health Organisation Robson Classification Implementation Manual p.34","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Robson Classification — tgcs_classify","title":"Add Robson Classification — tgcs_classify","text":"Adds Robson Classifications data frame births, birth details 6 obstetric variables recorded.","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Robson Classification — tgcs_classify","text":"","code":"tgcs_classify(.data)"},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Robson Classification — tgcs_classify","text":".data data frame containing least 6 columns, one obstetric variable. Additional columns preserved output.","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Robson Classification — tgcs_classify","text":"data frame Robson Classification added.","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_make_babies.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Babies — tgcs_make_babies","title":"Make Babies — tgcs_make_babies","text":"Make dataframe simulated births, suitable use testing demonstrating robson10classifier package.  row returned dataframe represents birth.  Optionally, ID column can also included.","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_make_babies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Babies — tgcs_make_babies","text":"","code":"tgcs_make_babies(qty = 1, with_id = FALSE)"},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_make_babies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Babies — tgcs_make_babies","text":"qty integer representing number births create. with_id logical. like create unique ID column. ID numbers sequential, starting 1.","code":""},{"path":"https://thomuk.github.io/robson10classifier/reference/tgcs_make_babies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Babies — tgcs_make_babies","text":"data frame simulated births data.","code":""},{"path":[]},{"path":"https://thomuk.github.io/robson10classifier/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"robson10classifier 0.2.0","text":"Added tgcs_make_babies() function, generates synthetic data population births, including random assignments categories used Robson Group classification. Intended use testing demos.","code":""},{"path":"https://thomuk.github.io/robson10classifier/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"robson10classifier 0.2.0","text":"Fixed classification Robson Group 10 births, previously classified “Unclassifiable” group 6 group 7 births data Parity missing.","code":""},{"path":"https://thomuk.github.io/robson10classifier/news/index.html","id":"robson10classifier-010","dir":"Changelog","previous_headings":"","what":"robson10classifier 0.1.0","title":"robson10classifier 0.1.0","text":"Initial release.","code":""}]
